---
- name: Install Java
  hosts: all
  tasks:
    - name: Set facts for Java 17 vars
      set_fact:
        java_home: "/opt/jdk/{{ java_jdk_version }}"
      tags: java
    - name: Upload .tar file containing binaries from local storage
      copy:
        src: "{{ java_oracle_jdk_package }}"
        dest: "/tmp/jdk-{{ java_jdk_version }}.tar"
      register: download_java_binaries
      until: download_java_binaries is succeeded
      tags: java
    - name: Ensure installation dir exists
      become: true
      file:
        path: "{{ java_home }}"
        state: directory
        recurse: true
      tags: java
    - name: Extract java in the installation directory
      become: true
      unarchive:
        copy: true
        src: "/Users/nikitavinogradov/Documents/education/pyCharm/ansible_netology/08-ansible-02-playbook/playbook/jdk-{{ java_jdk_version }}_linux-aarch64_bin.tar"
        dest: "{{ java_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ java_home }}/bin/java"
      tags:
        - java
    - name: Export environment variables
      become: true
      template:
        src: jdk.sh.j2
        dest: /etc/profile.d/jdk.sh
      tags: java
- name: Install Elasticsearch
  hosts: all
  tasks:
    - name: Upload tar.gz Elasticsearch from remote URL
      get_url:
        url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elastic_version }}-linux-aarch64.tar.gz"
        dest: "/tmp/elasticsearch-{{ elastic_version }}-linux-aarch64.tar.gz"
        mode: 0755
        timeout: 60
        force: false
        validate_certs: false
      register: get_elastic
      until: get_elastic is succeeded
      tags: elastic
    - name: Create directory for Elasticsearch
      become: true
      file:
        state: directory
        path: "{{ elastic_home }}"
        recurse: true
      tags: elastic
    - name: Extract Elasticsearch in the installation directory
      become: true
      unarchive:
        remote_src: true
        src: "/tmp/elasticsearch-{{ elastic_version }}-linux-aarch64.tar.gz"
        dest: "{{ elastic_home }}"
        creates: "{{ elastic_home }}/bin/elasticsearch"
        extra_opts: [--strip-components=1]
      tags:
        - elastic
    - name: Set environment Elastic
      become: true
      template:
        src: templates/elk.sh.j2
        dest: /etc/profile.d/elk.sh
      tags: elastic
- name: Install Kibana
  hosts: all
  tasks:
    - name: Upload tar.gz Kibana from remote URL
      get_url:
        url: "https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-linux-aarch64.tar.gz"
        dest: "/tmp/kibana-{{ kibana_version }}-linux-aarch64.tar.gz"
        mode: 0755
        timeout: 60
        force: false
        validate_certs: false
      register: get_kibana
      until: get_kibana is succeeded
      tags: kibana
    - name: Create directory for Kibana
      become: true
      file:
        state: directory
        path: "{{ kibana_home }}"
        recurse: true
      tags: kibana
    - name: Extract Kibana in the installation directory
      become: true
      unarchive:
        remote_src: true
        src: "/tmp/kibana-{{ kibana_version }}-linux-aarch64.tar.gz"
        dest: "{{ kibana_home }}"
        creates: "{{ kibana_home }}/bin/kibana"
        extra_opts: [--strip-components=1]
      tags:
        - kibana
    - name: Set environment Kibana
      become: true
      template:
        src: templates/kibana.sh.j2
        dest: /etc/profile.d/kibana.sh
      tags: kibana
